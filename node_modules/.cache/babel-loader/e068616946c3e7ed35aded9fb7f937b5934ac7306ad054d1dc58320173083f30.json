{"ast":null,"code":"var _jsxFileName = \"/home/ideyalabs/Desktop/react query practise/react-query-practise/src/pages/Timezone.jsx\",\n  _s = $RefreshSig$();\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { useFormik } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport { timezoneService } from \"../API/timezone/TimezoneService\";\nimport Button from \"../components/Button\";\nimport { QueryKeys } from \"../helpers/QueryKeys\";\nimport { useTimezone } from \"../query-hooks/useTimezone\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Timezone() {\n  _s();\n  var _data$timezone;\n  const queryClient = useQueryClient();\n\n  // const { isLoading, data, isError, error } = useQuery({\n  //   queryKey: [QueryKeys.TimezoneGet],\n  //   queryFn: () => timezoneService.getTimezone().then((res) => res.data[0]),\n  // });\n\n  const {\n    isLoading,\n    data,\n    isError\n  } = useTimezone();\n  const mutation = useMutation({\n    mutationFn: timezone => timezoneService.updateTimezone({\n      timezone\n    }),\n    onSuccess: res => {\n      console.log(res);\n      queryClient.invalidateQueries({\n        queryKey: [QueryKeys.TimezoneGet]\n      });\n    },\n    onError: err => {\n      console.log(\"unable to update the timezone\" + err);\n    }\n  });\n  const handleSubmit = values => {\n    mutation.mutate(values.timezone);\n  };\n  const formik = useFormik({\n    initialValues: {\n      timezone: (_data$timezone = data === null || data === void 0 ? void 0 : data.timezone) !== null && _data$timezone !== void 0 ? _data$timezone : \"\"\n    },\n    onSubmit: handleSubmit,\n    enableReinitialize: true\n  });\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Something went wrong...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Current timezone:\", /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"timezone\",\n      value: formik.values.timezone,\n      onChange: formik.handleChange(\"timezone\"),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"EST\",\n        children: \"EST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"CST\",\n        children: \"CST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"MST\",\n        children: \"MST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"PST\",\n        children: \"PST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        onClick: formik.handleSubmit,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Timezone, \"nwBzG5Lyy7oRaHqu5/9lg8UezgI=\", false, function () {\n  return [useQueryClient, useTimezone, useMutation, useFormik];\n});\n_c = Timezone;\nvar _c;\n$RefreshReg$(_c, \"Timezone\");","map":{"version":3,"names":["useMutation","useQuery","useQueryClient","useFormik","React","useEffect","useState","timezoneService","Button","QueryKeys","useTimezone","Timezone","queryClient","isLoading","data","isError","mutation","mutationFn","timezone","updateTimezone","onSuccess","res","console","log","invalidateQueries","queryKey","TimezoneGet","onError","err","handleSubmit","values","mutate","formik","initialValues","onSubmit","enableReinitialize","handleChange"],"sources":["/home/ideyalabs/Desktop/react query practise/react-query-practise/src/pages/Timezone.jsx"],"sourcesContent":["import { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { useFormik } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport { timezoneService } from \"../API/timezone/TimezoneService\";\nimport Button from \"../components/Button\";\nimport { QueryKeys } from \"../helpers/QueryKeys\";\nimport { useTimezone } from \"../query-hooks/useTimezone\";\n\nexport default function Timezone() {\n  const queryClient = useQueryClient();\n\n  // const { isLoading, data, isError, error } = useQuery({\n  //   queryKey: [QueryKeys.TimezoneGet],\n  //   queryFn: () => timezoneService.getTimezone().then((res) => res.data[0]),\n  // });\n\n  const { isLoading, data, isError } = useTimezone();\n\n  const mutation = useMutation({\n    mutationFn: (timezone) => timezoneService.updateTimezone({ timezone }),\n    onSuccess: (res) => {\n      console.log(res);\n      queryClient.invalidateQueries({ queryKey: [QueryKeys.TimezoneGet] });\n    },\n    onError: (err) => {\n      console.log(\"unable to update the timezone\" + err);\n    },\n  });\n\n  const handleSubmit = (values) => {\n    mutation.mutate(values.timezone);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      timezone: data?.timezone ?? \"\",\n    },\n    onSubmit: handleSubmit,\n    enableReinitialize: true,\n  });\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (isError) {\n    return <div>Something went wrong...</div>;\n  }\n\n  return (\n    <div>\n      Current timezone:\n      <select\n        name=\"timezone\"\n        value={formik.values.timezone}\n        onChange={formik.handleChange(\"timezone\")}\n      >\n        <option value={\"EST\"}>EST</option>\n        <option value={\"CST\"}>CST</option>\n        <option value={\"MST\"}>MST</option>\n        <option value={\"PST\"}>PST</option>\n      </select>\n      <div>\n        <Button type=\"button\" onClick={formik.handleSubmit}>\n          Update\n        </Button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,QAAQ,EAAEC,cAAc,QAAQ,uBAAuB;AAC7E,SAASC,SAAS,QAAQ,QAAQ;AAClC,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,eAAe,QAAQ,iCAAiC;AACjE,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,SAAS,QAAQ,sBAAsB;AAChD,SAASC,WAAW,QAAQ,4BAA4B;AAAC;AAEzD,eAAe,SAASC,QAAQ,GAAG;EAAA;EAAA;EACjC,MAAMC,WAAW,GAAGV,cAAc,EAAE;;EAEpC;EACA;EACA;EACA;;EAEA,MAAM;IAAEW,SAAS;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGL,WAAW,EAAE;EAElD,MAAMM,QAAQ,GAAGhB,WAAW,CAAC;IAC3BiB,UAAU,EAAGC,QAAQ,IAAKX,eAAe,CAACY,cAAc,CAAC;MAAED;IAAS,CAAC,CAAC;IACtEE,SAAS,EAAGC,GAAG,IAAK;MAClBC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChBT,WAAW,CAACY,iBAAiB,CAAC;QAAEC,QAAQ,EAAE,CAAChB,SAAS,CAACiB,WAAW;MAAE,CAAC,CAAC;IACtE,CAAC;IACDC,OAAO,EAAGC,GAAG,IAAK;MAChBN,OAAO,CAACC,GAAG,CAAC,+BAA+B,GAAGK,GAAG,CAAC;IACpD;EACF,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,MAAM,IAAK;IAC/Bd,QAAQ,CAACe,MAAM,CAACD,MAAM,CAACZ,QAAQ,CAAC;EAClC,CAAC;EAED,MAAMc,MAAM,GAAG7B,SAAS,CAAC;IACvB8B,aAAa,EAAE;MACbf,QAAQ,oBAAEJ,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEI,QAAQ,2DAAI;IAC9B,CAAC;IACDgB,QAAQ,EAAEL,YAAY;IACtBM,kBAAkB,EAAE;EACtB,CAAC,CAAC;EAEF,IAAItB,SAAS,EAAE;IACb,oBAAO;MAAA,UAAK;IAAU;MAAA;MAAA;MAAA;IAAA,QAAM;EAC9B;EAEA,IAAIE,OAAO,EAAE;IACX,oBAAO;MAAA,UAAK;IAAuB;MAAA;MAAA;MAAA;IAAA,QAAM;EAC3C;EAEA,oBACE;IAAA,WAAK,mBAEH;MACE,IAAI,EAAC,UAAU;MACf,KAAK,EAAEiB,MAAM,CAACF,MAAM,CAACZ,QAAS;MAC9B,QAAQ,EAAEc,MAAM,CAACI,YAAY,CAAC,UAAU,CAAE;MAAA,wBAE1C;QAAQ,KAAK,EAAE,KAAM;QAAA,UAAC;MAAG;QAAA;QAAA;QAAA;MAAA,QAAS,eAClC;QAAQ,KAAK,EAAE,KAAM;QAAA,UAAC;MAAG;QAAA;QAAA;QAAA;MAAA,QAAS,eAClC;QAAQ,KAAK,EAAE,KAAM;QAAA,UAAC;MAAG;QAAA;QAAA;QAAA;MAAA,QAAS,eAClC;QAAQ,KAAK,EAAE,KAAM;QAAA,UAAC;MAAG;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAC3B,eACT;MAAA,uBACE,QAAC,MAAM;QAAC,IAAI,EAAC,QAAQ;QAAC,OAAO,EAAEJ,MAAM,CAACH,YAAa;QAAA,UAAC;MAEpD;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GA7DuBlB,QAAQ;EAAA,QACVT,cAAc,EAOGQ,WAAW,EAE/BV,WAAW,EAebG,SAAS;AAAA;AAAA,KAzBFQ,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}